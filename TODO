# -*- org -*-
* DONE make test experiment
#+BEGIN_SRC R 
  library(rosettR)

  meta <- metaTemplate(letters[1:4], treatments=c("control", "osmotic"),
                       timepoints=c(11, 14, 16, 18), nrepeats=3)
  rosettR:::newExperiment("pkg/inst/examples/rosettrTest", meta)

  for(i in meta$timepoints)
      file.copy(
          sprintf("EXP001_Daniel/D%d/plate%03d.jpg", i, 1:6),
          sprintf("pkg/inst/examples/rosettrTest/D%d/", i)
          )

  file.copy("pkg/inst/examples/rosettrTest.zip",
            file.path(.libPaths()[1], "rosettR/examples/rosettrTest.zip"),
            overwrite=TRUE)
  makeTestExperiment()
#+END_SRC
* DONE create a new experiment and get the sowing report
#+BEGIN_SRC R
  library(rosettR)
  file.copy("pkg/inst/reports/sowing.Rmd",
            file.path(.libPaths()[1], "rosettR/reports"), overwrite=TRUE)

  makeReport("rosettrTest", "sowing")
#+END_SRC
* DONE raw image gallery
  - State "DONE"       from "TODO"       [2015-11-05 Thu 22:49]
#+BEGIN_SRC R
  file.copy("pkg/inst/reports/overview.Rmd",
            file.path(.libPaths()[1], "rosettR/reports"), overwrite=TRUE)
  makeReport("rosettrTest", "overview")
#+END_SRC
* DONE analyze the images
  - State "DONE"       from "TODO"       [2015-11-08 Sun 12:59]
#+BEGIN_SRC R
  processPlateExperiment("rosettrTest")
#+END_SRC

* DONE qc report
#+BEGIN_SRC R
  file.copy("pkg/inst/reports/quality-check.Rmd",
            file.path(.libPaths()[1], "rosettR/reports"), overwrite=TRUE)
  makeReport("rosettrTest", "quality-check", "qc")
#+END_SRC

* DONE basic statistics report germplasm -- treatment
  - State "DONE"       from "TODO"       [2015-11-11 Wed 18:19]
Setting up the basic G - T comparison
#+BEGIN_SRC R :session *R*
  library(rosettR)
  library(plyr)
  library(multcomp)

  ## prep data
  file.copy("/data/prod/Projects/Arabidopsis/BIO1-032/phenotyping/plate/EXP029_MERIT/Output/data.csv",
            "data.csv", overwrite = TRUE)
  file.copy("/data/prod/Projects/Arabidopsis/BIO1-032/phenotyping/plate/EXP029_MERIT/Output/reports/plate-compare_areas_germplasm_treatments-Ler_wt/anova-results.csv",
            "anova-results.csv", overwrite = TRUE)
  expdf <- createPlateTestDf(read.csv("data.csv"))

  ## new way
  new <- simpleAnovaTableGT(expdf, "Ler_wt", "AREA_12")

  ## old way
  traits <- colnames(expdf)[c(grep('^AREA', colnames(expdf)),
                              grep('^RGR', colnames(expdf)))]
  expdf$reference <- "Ler_wt"
  vars <- 'treatment'
  expdf$TRT <- apply(expdf[, c('GERMPLASM', vars)], 1, paste, collapse='_')
  nmeta <-
    (BCS.PhenoData::make.metadata(traits=traits,
                                   treats=vars,
                                   formats=rep("NUM.2", length(traits)),
                                   short=traits,
                                   units=c(rep("mm2",
                                     sum(grepl('^AREA', colnames(expdf)))),
                                     rep("", sum(grepl('^RGR', colnames(expdf)))))))

  data <- data.frame(EXPT="ba", GERMPLASM=expdf$GERMPLASM, BLOCK=expdf$BLOCK, 
                     SUBBLOCK=NA, SUBSUBBLOCK=NA, ROW=expdf$ROW, RANGE=expdf$RANGE, 
                     expdf[, c(vars, traits)])
  data$TRT <- apply(data[, c('GERMPLASM', vars)], 1, paste, collapse='_')
  pheno <- BCS.PhenoData::make.phenodata(data, nmeta)


  left <- right <- data.frame(germplasm=character(), treatment=character())
  for(g in as.character(unique(data$GERMPLASM))) {
    for(t in as.character(unique(data$treatment))) {
      for(r in "Ler_wt") {
        if(g == r) next
        left <- rbind(left, data.frame(germplasm=g, treatment=t, stringsAsFactors=FALSE))
        right <- rbind(right, data.frame(germplasm=r, treatment=t, stringsAsFactors=FALSE))
      }
    }
  }

  skip <- apply(left, 1, paste, collapse='') == apply(right, 1, paste, collapse='')
  left <- left[!skip,]
  right <- right[!skip,]
  mat <-
    plyr::laply(1:nrow(left), function(i) c(paste(left[i,], collapse='_'),
                                            paste(right[i,], collapse='_')))

  cm <- BCS.PhenoData::create.cm(contrasts=mat, levels=levels(factor(data$TRT)))
  results <- BCS.PhenoData::anova.phenodata(pheno, factor="TRT",
                                            random="~ BLOCK", cm=cm)
  cvIndex <- match("CV", names(results))
  results_df <- BCS.Phenotyping:::anova_phenodata_to_data_frame(results[-cvIndex],
                                                                pheno, left)

  ## check that it's ok
  results_df$comparison <- gsub(" ", "_", results_df$comparison)
  old <- subset(results_df, trait == "AREA_12")
  ba <- merge(old, new, by="comparison")
  head(ba[, c("comparison", "Mean1.x", "Mean1.y")])
  with(ba, cor(Mean2.y, Mean2.x))
  with(ba, MASS::eqscplot(Mean1, mean_left))
  abline(c(0,1))
  with(ba, MASS::eqscplot(Mean2, mean_right))
  abline(c(0,1))
  with(ba, plot(Pvalue, pvalue))
  with(ba, MASS::eqscplot(Effect, Estimate))
  abline(c(0,1))

#+END_SRC

#+BEGIN_SRC R
  file.copy("pkg/inst/reports/compare-areas.Rmd",
            file.path(.libPaths()[1], "rosettR/reports"), overwrite=TRUE)
  makeReport("rosettrTest", "compare-areas")
#+END_SRC

* TODO test removing some boxes and redo
works now, see example reprocessPlateImages

plus document this in qc report
#+BEGIN_SRC R :session *R*

#+END_SRC
* TODO prettify reports with css
http://www.r-bloggers.com/fast-track-publishing-using-knitr-the-setup-using-rprofile-with-custom-css-some-html-goodies-part-ii/
* TODO test by re-analyzing some old experiment
